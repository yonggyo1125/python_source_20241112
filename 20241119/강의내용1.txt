예외처리 
1. 예외는 언제 발생하는가?
	오류(Error) : 시스템 오류 , 메모리 부족 - 통제 불가능 문제 
	예외(Exception) : 코드 상의 문제 - 통제 가능

2. 예외 예외 처리 기법
	예외를 왜 처리해야 할까?
	- 서비스의 중단을 막고 적절한 대안적인 처리를 하기 위한 목적 
	
1) try-except 문
try:
	// 예외가 발생할 가능성이 있는 코드 
	
except: 
	// 예외가 발생하면 대안적인 처리를 할 수 있는 구간 
	
2) try-except만 쓰는 방법
3) 발생 오류만 포함한 except 문
4) 발생 오류와 오류 변수까지 포함한 except 문
5) try-finally 문
try:

finally: 
	예외가 발생하든 하지 않든 무조건 실행되는 구간 
	함수 내에서 return 이후에도 무조건 실행 
		- return : 함수의 연산 종료!

참고)
open("파일 경로", "처리 모드")	
	처리 모드
		r : 파일 내용 읽기 
		w : 파일 내용 쓰기
		a : 내일 내용에 끝에 추가하기
	
	- 파일을 다루기 위해서는 이 데이터를 담을 수 있는 메모리가 필요(시스템 자원이 필요!)
	- write("텍스트 데이터")  -> 파일로 데이터를 작성
	- read() : 파일 데이터를 읽어오기
	
6) 여러 개의 오류 처리하기
try:

...

except ... : 

except ... :

7) try-else 문
8) 오류 회피하기
9) 오류 일부러 발생시키기
10) 예외 만들기