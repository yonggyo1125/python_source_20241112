마켓과 머신러닝
0. 머신러닝 라이브러리 
scikit-learn

1. 키워드 정리
1) 특성 : 데이터를 표현하는 하나의 성질 / 학습할 데이터
2. k-최근접 이웃 알고리즘
	- 주변에 많이 있는 특성으로 분류
	- 주변에 많이 있는 분류(클래스)로 정답으로 채택 
	
3. 모델
1) 알고리즘이 구현된 객체
2) 종종 알고리즘 자체를 모델이라고 부른다. 

3. 정확도
1) 정확한 답을 몇 개 맞췄는지 백분률로 나타낸 값
2) 사이킷런에서는 0~1 사이 값으로 출력된다.
3) 정확도 = (정확히 맞힌 갯수) / (전체 데이터 갯수)
4. 이진분류
1) 머신러닝에서 여러 개의 종류(혹은 클래스(class)라고 부릅니다) 중 하나를 구별해 내는 문제를 분류(classification)라고 부릅니다.
2) 2개의 클래스 중 하나를 고르는 문제를 이진 분류(binary classification)라고 합니다.


예제 - 생선 분류 문제
1. 도미 데이터 준비하기 
conda install matplotlib
conda install scikit-learn

2. 방어 데이터 준비하기
3. 첫 번째 머신러닝 프로그램
- 학습 데이터 
	- 도미 + 방어
	- 길이, 무게
	[길이, 무게]
	zip((...), (...)
- 정답 데이터
	- 도미 : 35마리 (1) 
	- 방어 : 14마리 (0)

참고)
	지도학습 
		- 답을 알려주는 학습 
		- 학습 데이터, 정답 데이터(타겟)
		
	비지도학습 
		- 답을 알려주지 않는 학습 
		- 학습 데이터
		- 군집 알고리즘
		- k-평균 
		
1) 2차원 리스트 만들기
2) 정답 데이터 준비하기
4. k-최근접 이웃 알고리즘
- sklearn.neighbors 
		KNeighborsClassifier() : 여러개 중에서 한개를 분류
		KNeighborsRegressor() : 예측
		

- 어떤 데이터에 대한 답을 구할 때 주위의 다른 데이터를 보고 다수를 차지하는 것을 정답으로 사용
- k-최근접 이웃 알고리즘을 위해 준비해야 할 일은 데이터를 모두 가지고 있는 것이 전부
- 새로운 데이터에 대해 예측할 때는 가장 가까운 직선거리에 어떤 데이터가 있는지를 살피기만 하면 된다.
- 단점
    - k-최근접 이웃 알고리즘의 이런 특징 때문에 데이터가 아주 많은 경우 사용하기 어렵습니다.
    - 데이터가 크기 때문에 메모리가 많이 필요하고 직선거리를 계산하는 데도 많은 시간이 필요